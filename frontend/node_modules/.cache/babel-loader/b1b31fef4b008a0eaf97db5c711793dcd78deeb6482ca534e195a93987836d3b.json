{"ast":null,"code":"import _objectSpread from\"/app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import axios from'axios';import{Brain,Plus,Play,Pause,Square,Edit,Trash2,TrendingUp,AlertCircle}from'lucide-react';import LoadingSpinner from'./LoadingSpinner';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Strategies=()=>{const[strategies,setStrategies]=useState([]);const[loading,setLoading]=useState(true);const[showCreateModal,setShowCreateModal]=useState(false);const[editingStrategy,setEditingStrategy]=useState(null);const[message,setMessage]=useState(null);const[strategyForm,setStrategyForm]=useState({name:'',description:'',coin:'BTC',config:{entry_conditions:{},exit_conditions:{},risk_management:{max_loss:100,max_position_size:1},position_sizing:{size_type:'fixed',amount:0.1}}});const coins=['BTC','ETH','SOL','AVAX','MATIC','LINK'];useEffect(()=>{fetchStrategies();},[]);const fetchStrategies=async()=>{try{setLoading(true);const response=await axios.get('/api/strategies');if(response.data.success){setStrategies(response.data.data);}}catch(error){console.error('Error fetching strategies:',error);setMessage({type:'error',text:'Failed to fetch strategies'});}finally{setLoading(false);}};const handleCreateStrategy=async e=>{e.preventDefault();if(!strategyForm.name.trim()){setMessage({type:'error',text:'Strategy name is required'});return;}try{const response=await axios.post('/api/strategies',_objectSpread(_objectSpread({},strategyForm),{},{status:'active',performance:{total_trades:0,win_rate:0,total_pnl:0,max_drawdown:0}}));if(response.data.success){setMessage({type:'success',text:'Strategy created successfully!'});setShowCreateModal(false);resetForm();fetchStrategies();}}catch(error){console.error('Error creating strategy:',error);setMessage({type:'error',text:'Failed to create strategy'});}};const handleUpdateStrategy=async e=>{e.preventDefault();if(!editingStrategy)return;try{const response=await axios.put(\"/api/strategies/\".concat(editingStrategy.id),strategyForm);if(response.data.success){setMessage({type:'success',text:'Strategy updated successfully!'});setEditingStrategy(null);resetForm();fetchStrategies();}}catch(error){console.error('Error updating strategy:',error);setMessage({type:'error',text:'Failed to update strategy'});}};const handleDeleteStrategy=async strategyId=>{if(!window.confirm('Are you sure you want to delete this strategy?')){return;}try{const response=await axios.delete(\"/api/strategies/\".concat(strategyId));if(response.data.success){setMessage({type:'success',text:'Strategy deleted successfully!'});fetchStrategies();}}catch(error){console.error('Error deleting strategy:',error);setMessage({type:'error',text:'Failed to delete strategy'});}};const handleStatusChange=async(strategyId,newStatus)=>{try{const strategy=strategies.find(s=>s.id===strategyId);const response=await axios.put(\"/api/strategies/\".concat(strategyId),_objectSpread(_objectSpread({},strategy),{},{status:newStatus}));if(response.data.success){setMessage({type:'success',text:\"Strategy \".concat(newStatus,\" successfully!\")});fetchStrategies();}}catch(error){console.error('Error updating strategy status:',error);setMessage({type:'error',text:'Failed to update strategy status'});}};const resetForm=()=>{setStrategyForm({name:'',description:'',coin:'BTC',config:{entry_conditions:{},exit_conditions:{},risk_management:{max_loss:100,max_position_size:1},position_sizing:{size_type:'fixed',amount:0.1}}});};const openEditModal=strategy=>{setEditingStrategy(strategy);setStrategyForm({name:strategy.name,description:strategy.description||'',coin:strategy.coin,config:strategy.config});setShowCreateModal(true);};const closeModal=()=>{setShowCreateModal(false);setEditingStrategy(null);resetForm();};const getStatusColor=status=>{switch(status){case'active':return'bg-green-900 text-green-300';case'paused':return'bg-yellow-900 text-yellow-300';case'stopped':return'bg-red-900 text-red-300';default:return'bg-gray-900 text-gray-300';}};const getStatusIcon=status=>{switch(status){case'active':return/*#__PURE__*/_jsx(Play,{size:16});case'paused':return/*#__PURE__*/_jsx(Pause,{size:16});case'stopped':return/*#__PURE__*/_jsx(Square,{size:16});default:return null;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-white\",children:\"Trading Strategies\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowCreateModal(true),className:\"flex items-center space-x-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors\",children:[/*#__PURE__*/_jsx(Plus,{size:20}),/*#__PURE__*/_jsx(\"span\",{children:\"Create Strategy\"})]})]}),message&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 rounded-lg flex items-center space-x-2 \".concat(message.type==='success'?'bg-green-900 text-green-300 border border-green-700':'bg-red-900 text-red-300 border border-red-700'),children:[/*#__PURE__*/_jsx(AlertCircle,{size:20}),/*#__PURE__*/_jsx(\"span\",{children:message.text}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setMessage(null),className:\"ml-auto text-current hover:opacity-70\",children:\"\\xD7\"})]}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center py-12\",children:/*#__PURE__*/_jsx(LoadingSpinner,{size:\"large\"})}):strategies.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",children:strategies.map(strategy=>{var _strategy$performance,_strategy$performance2,_strategy$performance3,_strategy$performance4,_strategy$performance5;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-6 rounded-lg border border-gray-700\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-start justify-between mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold text-white mb-1\",children:strategy.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-400\",children:strategy.coin}),/*#__PURE__*/_jsxs(\"span\",{className:\"px-2 py-1 rounded text-xs font-medium flex items-center space-x-1 \".concat(getStatusColor(strategy.status)),children:[getStatusIcon(strategy.status),/*#__PURE__*/_jsx(\"span\",{children:strategy.status.toUpperCase()})]})]}),strategy.description&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 mb-3\",children:strategy.description})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-3 bg-gray-700 rounded\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-gray-300 mb-2\",children:\"Performance\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-2 text-xs\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Trades:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-white ml-1\",children:((_strategy$performance=strategy.performance)===null||_strategy$performance===void 0?void 0:_strategy$performance.total_trades)||0})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Win Rate:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-white ml-1\",children:[((_strategy$performance2=strategy.performance)===null||_strategy$performance2===void 0?void 0:_strategy$performance2.win_rate)||0,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"PnL:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-1 \".concat((((_strategy$performance3=strategy.performance)===null||_strategy$performance3===void 0?void 0:_strategy$performance3.total_pnl)||0)>=0?'text-green-400':'text-red-400'),children:[\"$\",((_strategy$performance4=strategy.performance)===null||_strategy$performance4===void 0?void 0:_strategy$performance4.total_pnl)||0]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Drawdown:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-red-400 ml-1\",children:[((_strategy$performance5=strategy.performance)===null||_strategy$performance5===void 0?void 0:_strategy$performance5.max_drawdown)||0,\"%\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-1\",children:[strategy.status!=='active'&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleStatusChange(strategy.id,'active'),className:\"p-2 bg-green-600 hover:bg-green-700 rounded text-white transition-colors\",title:\"Start Strategy\",children:/*#__PURE__*/_jsx(Play,{size:16})}),strategy.status==='active'&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleStatusChange(strategy.id,'paused'),className:\"p-2 bg-yellow-600 hover:bg-yellow-700 rounded text-white transition-colors\",title:\"Pause Strategy\",children:/*#__PURE__*/_jsx(Pause,{size:16})}),strategy.status!=='stopped'&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleStatusChange(strategy.id,'stopped'),className:\"p-2 bg-red-600 hover:bg-red-700 rounded text-white transition-colors\",title:\"Stop Strategy\",children:/*#__PURE__*/_jsx(Square,{size:16})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-1\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>openEditModal(strategy),className:\"p-2 bg-blue-600 hover:bg-blue-700 rounded text-white transition-colors\",title:\"Edit Strategy\",children:/*#__PURE__*/_jsx(Edit,{size:16})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteStrategy(strategy.id),className:\"p-2 bg-red-600 hover:bg-red-700 rounded text-white transition-colors\",title:\"Delete Strategy\",children:/*#__PURE__*/_jsx(Trash2,{size:16})})]})]})]},strategy.id);})}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(Brain,{className:\"w-16 h-16 text-gray-600 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400 text-lg\",children:\"No strategies created yet\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 text-sm mb-6\",children:\"Create your first trading strategy to get started\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowCreateModal(true),className:\"px-6 py-3 bg-blue-600 hover:bg-blue-700 rounded-lg text-white transition-colors\",children:\"Create Your First Strategy\"})]}),showCreateModal&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-6 rounded-lg w-full max-w-2xl max-h-[90vh] overflow-y-auto\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-white mb-4\",children:editingStrategy?'Edit Strategy':'Create New Strategy'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:editingStrategy?handleUpdateStrategy:handleCreateStrategy,className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-400 mb-2\",children:\"Strategy Name *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:strategyForm.name,onChange:e=>setStrategyForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value})),className:\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\",placeholder:\"Enter strategy name\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-400 mb-2\",children:\"Asset\"}),/*#__PURE__*/_jsx(\"select\",{value:strategyForm.coin,onChange:e=>setStrategyForm(prev=>_objectSpread(_objectSpread({},prev),{},{coin:e.target.value})),className:\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\",children:coins.map(coin=>/*#__PURE__*/_jsx(\"option\",{value:coin,children:coin},coin))})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-400 mb-2\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{value:strategyForm.description,onChange:e=>setStrategyForm(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),className:\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\",rows:\"3\",placeholder:\"Describe your trading strategy\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-t border-gray-700 pt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-white mb-3\",children:\"Risk Management\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-400 mb-2\",children:\"Max Loss ($)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:strategyForm.config.risk_management.max_loss,onChange:e=>setStrategyForm(prev=>_objectSpread(_objectSpread({},prev),{},{config:_objectSpread(_objectSpread({},prev.config),{},{risk_management:_objectSpread(_objectSpread({},prev.config.risk_management),{},{max_loss:parseFloat(e.target.value)||0})})})),className:\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\",min:\"0\",step:\"0.01\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-400 mb-2\",children:\"Max Position Size\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:strategyForm.config.risk_management.max_position_size,onChange:e=>setStrategyForm(prev=>_objectSpread(_objectSpread({},prev),{},{config:_objectSpread(_objectSpread({},prev.config),{},{risk_management:_objectSpread(_objectSpread({},prev.config.risk_management),{},{max_position_size:parseFloat(e.target.value)||0})})})),className:\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\",min:\"0\",step:\"0.001\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-t border-gray-700 pt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-white mb-3\",children:\"Position Sizing\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-400 mb-2\",children:\"Size Type\"}),/*#__PURE__*/_jsxs(\"select\",{value:strategyForm.config.position_sizing.size_type,onChange:e=>setStrategyForm(prev=>_objectSpread(_objectSpread({},prev),{},{config:_objectSpread(_objectSpread({},prev.config),{},{position_sizing:_objectSpread(_objectSpread({},prev.config.position_sizing),{},{size_type:e.target.value})})})),className:\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"fixed\",children:\"Fixed\"}),/*#__PURE__*/_jsx(\"option\",{value:\"percentage\",children:\"Percentage\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-400 mb-2\",children:\"Amount\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:strategyForm.config.position_sizing.amount,onChange:e=>setStrategyForm(prev=>_objectSpread(_objectSpread({},prev),{},{config:_objectSpread(_objectSpread({},prev.config),{},{position_sizing:_objectSpread(_objectSpread({},prev.config.position_sizing),{},{amount:parseFloat(e.target.value)||0})})})),className:\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\",min:\"0\",step:\"0.001\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-4 pt-4 border-t border-gray-700\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:closeModal,className:\"px-4 py-2 bg-gray-600 hover:bg-gray-700 rounded text-white transition-colors\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded text-white transition-colors\",children:editingStrategy?'Update Strategy':'Create Strategy'})]})]})]})})]});};export default Strategies;","map":{"version":3,"names":["React","useState","useEffect","axios","Brain","Plus","Play","Pause","Square","Edit","Trash2","TrendingUp","AlertCircle","LoadingSpinner","jsx","_jsx","jsxs","_jsxs","Strategies","strategies","setStrategies","loading","setLoading","showCreateModal","setShowCreateModal","editingStrategy","setEditingStrategy","message","setMessage","strategyForm","setStrategyForm","name","description","coin","config","entry_conditions","exit_conditions","risk_management","max_loss","max_position_size","position_sizing","size_type","amount","coins","fetchStrategies","response","get","data","success","error","console","type","text","handleCreateStrategy","e","preventDefault","trim","post","_objectSpread","status","performance","total_trades","win_rate","total_pnl","max_drawdown","resetForm","handleUpdateStrategy","put","concat","id","handleDeleteStrategy","strategyId","window","confirm","delete","handleStatusChange","newStatus","strategy","find","s","openEditModal","closeModal","getStatusColor","getStatusIcon","size","className","children","onClick","length","map","_strategy$performance","_strategy$performance2","_strategy$performance3","_strategy$performance4","_strategy$performance5","toUpperCase","title","onSubmit","value","onChange","prev","target","placeholder","required","rows","parseFloat","min","step"],"sources":["/app/frontend/src/components/Strategies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Brain, Plus, Play, Pause, Square, Edit, Trash2, TrendingUp, AlertCircle } from 'lucide-react';\nimport LoadingSpinner from './LoadingSpinner';\n\nconst Strategies = () => {\n  const [strategies, setStrategies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [editingStrategy, setEditingStrategy] = useState(null);\n  const [message, setMessage] = useState(null);\n  \n  const [strategyForm, setStrategyForm] = useState({\n    name: '',\n    description: '',\n    coin: 'BTC',\n    config: {\n      entry_conditions: {},\n      exit_conditions: {},\n      risk_management: { max_loss: 100, max_position_size: 1 },\n      position_sizing: { size_type: 'fixed', amount: 0.1 }\n    }\n  });\n\n  const coins = ['BTC', 'ETH', 'SOL', 'AVAX', 'MATIC', 'LINK'];\n\n  useEffect(() => {\n    fetchStrategies();\n  }, []);\n\n  const fetchStrategies = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/strategies');\n      if (response.data.success) {\n        setStrategies(response.data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching strategies:', error);\n      setMessage({ type: 'error', text: 'Failed to fetch strategies' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateStrategy = async (e) => {\n    e.preventDefault();\n    \n    if (!strategyForm.name.trim()) {\n      setMessage({ type: 'error', text: 'Strategy name is required' });\n      return;\n    }\n\n    try {\n      const response = await axios.post('/api/strategies', {\n        ...strategyForm,\n        status: 'active',\n        performance: {\n          total_trades: 0,\n          win_rate: 0,\n          total_pnl: 0,\n          max_drawdown: 0\n        }\n      });\n\n      if (response.data.success) {\n        setMessage({ type: 'success', text: 'Strategy created successfully!' });\n        setShowCreateModal(false);\n        resetForm();\n        fetchStrategies();\n      }\n    } catch (error) {\n      console.error('Error creating strategy:', error);\n      setMessage({ type: 'error', text: 'Failed to create strategy' });\n    }\n  };\n\n  const handleUpdateStrategy = async (e) => {\n    e.preventDefault();\n    \n    if (!editingStrategy) return;\n\n    try {\n      const response = await axios.put(`/api/strategies/${editingStrategy.id}`, strategyForm);\n\n      if (response.data.success) {\n        setMessage({ type: 'success', text: 'Strategy updated successfully!' });\n        setEditingStrategy(null);\n        resetForm();\n        fetchStrategies();\n      }\n    } catch (error) {\n      console.error('Error updating strategy:', error);\n      setMessage({ type: 'error', text: 'Failed to update strategy' });\n    }\n  };\n\n  const handleDeleteStrategy = async (strategyId) => {\n    if (!window.confirm('Are you sure you want to delete this strategy?')) {\n      return;\n    }\n\n    try {\n      const response = await axios.delete(`/api/strategies/${strategyId}`);\n      \n      if (response.data.success) {\n        setMessage({ type: 'success', text: 'Strategy deleted successfully!' });\n        fetchStrategies();\n      }\n    } catch (error) {\n      console.error('Error deleting strategy:', error);\n      setMessage({ type: 'error', text: 'Failed to delete strategy' });\n    }\n  };\n\n  const handleStatusChange = async (strategyId, newStatus) => {\n    try {\n      const strategy = strategies.find(s => s.id === strategyId);\n      const response = await axios.put(`/api/strategies/${strategyId}`, {\n        ...strategy,\n        status: newStatus\n      });\n\n      if (response.data.success) {\n        setMessage({ type: 'success', text: `Strategy ${newStatus} successfully!` });\n        fetchStrategies();\n      }\n    } catch (error) {\n      console.error('Error updating strategy status:', error);\n      setMessage({ type: 'error', text: 'Failed to update strategy status' });\n    }\n  };\n\n  const resetForm = () => {\n    setStrategyForm({\n      name: '',\n      description: '',\n      coin: 'BTC',\n      config: {\n        entry_conditions: {},\n        exit_conditions: {},\n        risk_management: { max_loss: 100, max_position_size: 1 },\n        position_sizing: { size_type: 'fixed', amount: 0.1 }\n      }\n    });\n  };\n\n  const openEditModal = (strategy) => {\n    setEditingStrategy(strategy);\n    setStrategyForm({\n      name: strategy.name,\n      description: strategy.description || '',\n      coin: strategy.coin,\n      config: strategy.config\n    });\n    setShowCreateModal(true);\n  };\n\n  const closeModal = () => {\n    setShowCreateModal(false);\n    setEditingStrategy(null);\n    resetForm();\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'active':\n        return 'bg-green-900 text-green-300';\n      case 'paused':\n        return 'bg-yellow-900 text-yellow-300';\n      case 'stopped':\n        return 'bg-red-900 text-red-300';\n      default:\n        return 'bg-gray-900 text-gray-300';\n    }\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'active':\n        return <Play size={16} />;\n      case 'paused':\n        return <Pause size={16} />;\n      case 'stopped':\n        return <Square size={16} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"text-3xl font-bold text-white\">Trading Strategies</h1>\n        <button\n          onClick={() => setShowCreateModal(true)}\n          className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors\"\n        >\n          <Plus size={20} />\n          <span>Create Strategy</span>\n        </button>\n      </div>\n\n      {/* Message Display */}\n      {message && (\n        <div className={`p-4 rounded-lg flex items-center space-x-2 ${\n          message.type === 'success' \n            ? 'bg-green-900 text-green-300 border border-green-700' \n            : 'bg-red-900 text-red-300 border border-red-700'\n        }`}>\n          <AlertCircle size={20} />\n          <span>{message.text}</span>\n          <button \n            onClick={() => setMessage(null)}\n            className=\"ml-auto text-current hover:opacity-70\"\n          >\n            ×\n          </button>\n        </div>\n      )}\n\n      {/* Strategies Grid */}\n      {loading ? (\n        <div className=\"flex justify-center py-12\">\n          <LoadingSpinner size=\"large\" />\n        </div>\n      ) : strategies.length > 0 ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {strategies.map((strategy) => (\n            <div key={strategy.id} className=\"bg-gray-800 p-6 rounded-lg border border-gray-700\">\n              {/* Strategy Header */}\n              <div className=\"flex items-start justify-between mb-4\">\n                <div className=\"flex-1\">\n                  <h3 className=\"text-lg font-bold text-white mb-1\">{strategy.name}</h3>\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <span className=\"text-sm text-gray-400\">{strategy.coin}</span>\n                    <span className={`px-2 py-1 rounded text-xs font-medium flex items-center space-x-1 ${getStatusColor(strategy.status)}`}>\n                      {getStatusIcon(strategy.status)}\n                      <span>{strategy.status.toUpperCase()}</span>\n                    </span>\n                  </div>\n                  {strategy.description && (\n                    <p className=\"text-sm text-gray-400 mb-3\">{strategy.description}</p>\n                  )}\n                </div>\n              </div>\n\n              {/* Strategy Performance */}\n              <div className=\"mb-4 p-3 bg-gray-700 rounded\">\n                <h4 className=\"text-sm font-medium text-gray-300 mb-2\">Performance</h4>\n                <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                  <div>\n                    <span className=\"text-gray-400\">Trades:</span>\n                    <span className=\"text-white ml-1\">{strategy.performance?.total_trades || 0}</span>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Win Rate:</span>\n                    <span className=\"text-white ml-1\">{strategy.performance?.win_rate || 0}%</span>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">PnL:</span>\n                    <span className={`ml-1 ${(strategy.performance?.total_pnl || 0) >= 0 ? 'text-green-400' : 'text-red-400'}`}>\n                      ${strategy.performance?.total_pnl || 0}\n                    </span>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Drawdown:</span>\n                    <span className=\"text-red-400 ml-1\">{strategy.performance?.max_drawdown || 0}%</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Action Buttons */}\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex space-x-1\">\n                  {strategy.status !== 'active' && (\n                    <button\n                      onClick={() => handleStatusChange(strategy.id, 'active')}\n                      className=\"p-2 bg-green-600 hover:bg-green-700 rounded text-white transition-colors\"\n                      title=\"Start Strategy\"\n                    >\n                      <Play size={16} />\n                    </button>\n                  )}\n                  {strategy.status === 'active' && (\n                    <button\n                      onClick={() => handleStatusChange(strategy.id, 'paused')}\n                      className=\"p-2 bg-yellow-600 hover:bg-yellow-700 rounded text-white transition-colors\"\n                      title=\"Pause Strategy\"\n                    >\n                      <Pause size={16} />\n                    </button>\n                  )}\n                  {strategy.status !== 'stopped' && (\n                    <button\n                      onClick={() => handleStatusChange(strategy.id, 'stopped')}\n                      className=\"p-2 bg-red-600 hover:bg-red-700 rounded text-white transition-colors\"\n                      title=\"Stop Strategy\"\n                    >\n                      <Square size={16} />\n                    </button>\n                  )}\n                </div>\n                \n                <div className=\"flex space-x-1\">\n                  <button\n                    onClick={() => openEditModal(strategy)}\n                    className=\"p-2 bg-blue-600 hover:bg-blue-700 rounded text-white transition-colors\"\n                    title=\"Edit Strategy\"\n                  >\n                    <Edit size={16} />\n                  </button>\n                  <button\n                    onClick={() => handleDeleteStrategy(strategy.id)}\n                    className=\"p-2 bg-red-600 hover:bg-red-700 rounded text-white transition-colors\"\n                    title=\"Delete Strategy\"\n                  >\n                    <Trash2 size={16} />\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-12\">\n          <Brain className=\"w-16 h-16 text-gray-600 mx-auto mb-4\" />\n          <p className=\"text-gray-400 text-lg\">No strategies created yet</p>\n          <p className=\"text-gray-500 text-sm mb-6\">Create your first trading strategy to get started</p>\n          <button\n            onClick={() => setShowCreateModal(true)}\n            className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 rounded-lg text-white transition-colors\"\n          >\n            Create Your First Strategy\n          </button>\n        </div>\n      )}\n\n      {/* Create/Edit Strategy Modal */}\n      {showCreateModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-gray-800 p-6 rounded-lg w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n            <h2 className=\"text-xl font-bold text-white mb-4\">\n              {editingStrategy ? 'Edit Strategy' : 'Create New Strategy'}\n            </h2>\n            \n            <form onSubmit={editingStrategy ? handleUpdateStrategy : handleCreateStrategy} className=\"space-y-4\">\n              {/* Basic Information */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-400 mb-2\">\n                    Strategy Name *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={strategyForm.name}\n                    onChange={(e) => setStrategyForm(prev => ({ ...prev, name: e.target.value }))}\n                    className=\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\"\n                    placeholder=\"Enter strategy name\"\n                    required\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-400 mb-2\">\n                    Asset\n                  </label>\n                  <select\n                    value={strategyForm.coin}\n                    onChange={(e) => setStrategyForm(prev => ({ ...prev, coin: e.target.value }))}\n                    className=\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\"\n                  >\n                    {coins.map(coin => (\n                      <option key={coin} value={coin}>{coin}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-400 mb-2\">\n                  Description\n                </label>\n                <textarea\n                  value={strategyForm.description}\n                  onChange={(e) => setStrategyForm(prev => ({ ...prev, description: e.target.value }))}\n                  className=\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\"\n                  rows=\"3\"\n                  placeholder=\"Describe your trading strategy\"\n                />\n              </div>\n\n              {/* Risk Management */}\n              <div className=\"border-t border-gray-700 pt-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-3\">Risk Management</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-400 mb-2\">\n                      Max Loss ($)\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={strategyForm.config.risk_management.max_loss}\n                      onChange={(e) => setStrategyForm(prev => ({\n                        ...prev,\n                        config: {\n                          ...prev.config,\n                          risk_management: {\n                            ...prev.config.risk_management,\n                            max_loss: parseFloat(e.target.value) || 0\n                          }\n                        }\n                      }))}\n                      className=\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\"\n                      min=\"0\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-400 mb-2\">\n                      Max Position Size\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={strategyForm.config.risk_management.max_position_size}\n                      onChange={(e) => setStrategyForm(prev => ({\n                        ...prev,\n                        config: {\n                          ...prev.config,\n                          risk_management: {\n                            ...prev.config.risk_management,\n                            max_position_size: parseFloat(e.target.value) || 0\n                          }\n                        }\n                      }))}\n                      className=\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\"\n                      min=\"0\"\n                      step=\"0.001\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Position Sizing */}\n              <div className=\"border-t border-gray-700 pt-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-3\">Position Sizing</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-400 mb-2\">\n                      Size Type\n                    </label>\n                    <select\n                      value={strategyForm.config.position_sizing.size_type}\n                      onChange={(e) => setStrategyForm(prev => ({\n                        ...prev,\n                        config: {\n                          ...prev.config,\n                          position_sizing: {\n                            ...prev.config.position_sizing,\n                            size_type: e.target.value\n                          }\n                        }\n                      }))}\n                      className=\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\"\n                    >\n                      <option value=\"fixed\">Fixed</option>\n                      <option value=\"percentage\">Percentage</option>\n                    </select>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-400 mb-2\">\n                      Amount\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={strategyForm.config.position_sizing.amount}\n                      onChange={(e) => setStrategyForm(prev => ({\n                        ...prev,\n                        config: {\n                          ...prev.config,\n                          position_sizing: {\n                            ...prev.config.position_sizing,\n                            amount: parseFloat(e.target.value) || 0\n                          }\n                        }\n                      }))}\n                      className=\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\"\n                      min=\"0\"\n                      step=\"0.001\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Action Buttons */}\n              <div className=\"flex justify-end space-x-4 pt-4 border-t border-gray-700\">\n                <button\n                  type=\"button\"\n                  onClick={closeModal}\n                  className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 rounded text-white transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded text-white transition-colors\"\n                >\n                  {editingStrategy ? 'Update Strategy' : 'Create Strategy'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Strategies;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}