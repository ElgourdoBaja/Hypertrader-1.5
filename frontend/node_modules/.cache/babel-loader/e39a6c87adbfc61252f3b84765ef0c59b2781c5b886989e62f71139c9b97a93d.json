{"ast":null,"code":"import _objectSpread from\"/app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import axios from'axios';import{Settings as SettingsIcon,Key,Shield,AlertCircle,CheckCircle,Eye,EyeOff}from'lucide-react';import LoadingSpinner from'./LoadingSpinner';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Settings=()=>{const[settings,setSettings]=useState(null);const[apiStatus,setApiStatus]=useState(null);const[loading,setLoading]=useState(true);const[saving,setSaving]=useState(false);const[testing,setTesting]=useState(false);const[message,setMessage]=useState(null);const[showPrivateKey,setShowPrivateKey]=useState(false);const[formData,setFormData]=useState({wallet_address:'',api_key:'',api_secret:'',environment:'mainnet'});useEffect(()=>{fetchSettings();checkApiStatus();},[]);const fetchSettings=async()=>{try{setLoading(true);const response=await axios.get('/api/settings');if(response.data.success){var _response$data$data$a,_response$data$data$a2,_response$data$data$a3,_response$data$data$a4;setSettings(response.data.data);setFormData({wallet_address:((_response$data$data$a=response.data.data.api_credentials)===null||_response$data$data$a===void 0?void 0:_response$data$data$a.wallet_address)||'',api_key:((_response$data$data$a2=response.data.data.api_credentials)===null||_response$data$data$a2===void 0?void 0:_response$data$data$a2.api_key)||'',api_secret:((_response$data$data$a3=response.data.data.api_credentials)===null||_response$data$data$a3===void 0?void 0:_response$data$data$a3.api_secret)||'',environment:((_response$data$data$a4=response.data.data.api_credentials)===null||_response$data$data$a4===void 0?void 0:_response$data$data$a4.environment)||'mainnet'});}}catch(error){console.error('Error fetching settings:',error);setMessage({type:'error',text:'Failed to fetch settings'});}finally{setLoading(false);}};const checkApiStatus=async()=>{try{const response=await axios.get('/api/settings/api-status');if(response.data.success){setApiStatus(response.data.data);}}catch(error){console.error('Error checking API status:',error);}};const handleSaveSettings=async e=>{e.preventDefault();try{setSaving(true);setMessage(null);const updatedSettings=_objectSpread(_objectSpread({},settings),{},{api_credentials:{wallet_address:formData.wallet_address,api_key:formData.api_key,api_secret:formData.api_secret,environment:formData.environment,is_configured:Boolean(formData.wallet_address&&formData.api_key&&formData.api_secret)}});const response=await axios.put('/api/settings',updatedSettings);if(response.data.success){setMessage({type:'success',text:'Settings saved successfully!'});setSettings(response.data.data);// Automatically refresh API status after saving\nsetTimeout(()=>{checkApiStatus();},1000);}else{setMessage({type:'error',text:response.data.message||'Failed to save settings'});}}catch(error){var _error$response,_error$response$data;console.error('Error saving settings:',error);setMessage({type:'error',text:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||'Failed to save settings'});}finally{setSaving(false);}};const handleTestConnection=async()=>{try{var _settings$api_credent,_settings$api_credent2,_settings$api_credent3,_settings$api_credent4;setTesting(true);setMessage(null);// First save the settings if they've changed\nif(formData.wallet_address!==(settings===null||settings===void 0?void 0:(_settings$api_credent=settings.api_credentials)===null||_settings$api_credent===void 0?void 0:_settings$api_credent.wallet_address)||formData.api_key!==(settings===null||settings===void 0?void 0:(_settings$api_credent2=settings.api_credentials)===null||_settings$api_credent2===void 0?void 0:_settings$api_credent2.api_key)||formData.api_secret!==(settings===null||settings===void 0?void 0:(_settings$api_credent3=settings.api_credentials)===null||_settings$api_credent3===void 0?void 0:_settings$api_credent3.api_secret)||formData.environment!==(settings===null||settings===void 0?void 0:(_settings$api_credent4=settings.api_credentials)===null||_settings$api_credent4===void 0?void 0:_settings$api_credent4.environment)){await handleSaveSettings({preventDefault:()=>{}});await new Promise(resolve=>setTimeout(resolve,1000));// Wait for settings to be applied\n}const response=await axios.get('/api/settings/api-status');if(response.data.success){var _response$data$data$t;setApiStatus(response.data.data);if(response.data.data.is_configured&&(_response$data$data$t=response.data.data.test_result)!==null&&_response$data$data$t!==void 0&&_response$data$data$t.includes('successfully')){setMessage({type:'success',text:'API connection test successful!'});}else{setMessage({type:'error',text:response.data.data.test_result||'API connection test failed'});}}}catch(error){console.error('Error testing connection:',error);setMessage({type:'error',text:'Failed to test API connection'});}finally{setTesting(false);}};const getStatusIcon=()=>{var _apiStatus$test_resul,_apiStatus$test_resul2;if(!apiStatus)return null;if(apiStatus.is_configured&&(_apiStatus$test_resul=apiStatus.test_result)!==null&&_apiStatus$test_resul!==void 0&&_apiStatus$test_resul.includes('✅')){return/*#__PURE__*/_jsx(CheckCircle,{className:\"w-5 h-5 text-green-400\"});}else if(apiStatus.is_configured&&(_apiStatus$test_resul2=apiStatus.test_result)!==null&&_apiStatus$test_resul2!==void 0&&_apiStatus$test_resul2.includes('❌')){return/*#__PURE__*/_jsx(AlertCircle,{className:\"w-5 h-5 text-red-400\"});}else{return/*#__PURE__*/_jsx(AlertCircle,{className:\"w-5 h-5 text-yellow-400\"});}};const getStatusText=()=>{var _apiStatus$test_resul3,_apiStatus$test_resul4;if(!apiStatus)return'Checking...';if(apiStatus.is_configured&&(_apiStatus$test_resul3=apiStatus.test_result)!==null&&_apiStatus$test_resul3!==void 0&&_apiStatus$test_resul3.includes('✅')){return'Connected and ready for trading';}else if(apiStatus.is_configured&&(_apiStatus$test_resul4=apiStatus.test_result)!==null&&_apiStatus$test_resul4!==void 0&&_apiStatus$test_resul4.includes('❌')){return'Configured but connection failed';}else if(apiStatus.is_configured){return'Configured - checking connection...';}else{return'Not configured';}};const getStatusColor=()=>{var _apiStatus$test_resul5,_apiStatus$test_resul6;if(!apiStatus)return'text-gray-400';if(apiStatus.is_configured&&(_apiStatus$test_resul5=apiStatus.test_result)!==null&&_apiStatus$test_resul5!==void 0&&_apiStatus$test_resul5.includes('✅')){return'text-green-400';}else if(apiStatus.is_configured&&(_apiStatus$test_resul6=apiStatus.test_result)!==null&&_apiStatus$test_resul6!==void 0&&_apiStatus$test_resul6.includes('❌')){return'text-red-400';}else if(apiStatus.is_configured){return'text-yellow-400';}else{return'text-yellow-400';}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"p-6 flex items-center justify-center h-64\",children:/*#__PURE__*/_jsx(LoadingSpinner,{size:\"large\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(SettingsIcon,{className:\"w-8 h-8 text-blue-400\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-white\",children:\"Settings\"})]}),message&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 rounded-lg flex items-center space-x-2 \".concat(message.type==='success'?'bg-green-900 text-green-300 border border-green-700':'bg-red-900 text-red-300 border border-red-700'),children:[/*#__PURE__*/_jsx(AlertCircle,{size:20}),/*#__PURE__*/_jsx(\"span\",{children:message.text}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setMessage(null),className:\"ml-auto text-current hover:opacity-70\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-6 rounded-lg border border-gray-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 mb-4\",children:[/*#__PURE__*/_jsx(Key,{className:\"w-6 h-6 text-blue-400\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-white\",children:\"API Configuration\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 p-4 bg-gray-700 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Connection Status:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[getStatusIcon(),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium \".concat(getStatusColor()),children:getStatusText()})]})]}),apiStatus&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Environment:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-white capitalize\",children:apiStatus.environment})]}),apiStatus.test_result&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"Test Result:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"\".concat(apiStatus.test_result.includes('successfully')?'text-green-400':'text-red-400'),children:apiStatus.test_result})]})]})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSaveSettings,className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-400 mb-2\",children:\"Environment\"}),/*#__PURE__*/_jsxs(\"select\",{value:formData.environment,onChange:e=>setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{environment:e.target.value})),className:\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"mainnet\",children:\"Mainnet (Live Trading)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"testnet\",children:\"Testnet (Paper Trading)\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:formData.environment==='testnet'?'Use testnet for safe testing with fake funds':'Use mainnet for live trading with real funds'})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-400 mb-2\",children:\"Main Wallet Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.wallet_address,onChange:e=>setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{wallet_address:e.target.value})),className:\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\",placeholder:\"0x1234567890abcdef1234567890abcdef12345678\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"Your main wallet address from Hyperliquid (master account address).\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-400 mb-2\",children:\"Hyperliquid API Key\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.api_key,onChange:e=>setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{api_key:e.target.value})),className:\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\",placeholder:\"Enter your Hyperliquid API key\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"The API key identifier from your Hyperliquid API wallet.\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-400 mb-2\",children:\"Hyperliquid API Secret Key\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPrivateKey?'text':'password',value:formData.api_secret,onChange:e=>setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{api_secret:e.target.value})),className:\"w-full bg-gray-700 text-white px-3 py-2 pr-10 rounded border border-gray-600 focus:outline-none focus:border-blue-400\",placeholder:\"Enter your Hyperliquid API secret key\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowPrivateKey(!showPrivateKey),className:\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-white\",children:showPrivateKey?/*#__PURE__*/_jsx(EyeOff,{size:16}):/*#__PURE__*/_jsx(Eye,{size:16})})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"The API secret key from your generated Hyperliquid API wallet.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-3 pt-4\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:saving,className:\"flex-1 py-2 px-4 bg-blue-600 hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed rounded text-white transition-colors\",children:saving?/*#__PURE__*/_jsx(LoadingSpinner,{size:\"small\"}):'Save Settings'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleTestConnection,disabled:testing||!formData.wallet_address||!formData.api_key||!formData.api_secret,className:\"py-2 px-4 bg-green-600 hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed rounded text-white transition-colors\",children:testing?/*#__PURE__*/_jsx(LoadingSpinner,{size:\"small\"}):'Test Connection'})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-6 rounded-lg border border-gray-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 mb-4\",children:[/*#__PURE__*/_jsx(Shield,{className:\"w-6 h-6 text-green-400\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-white\",children:\"Security Information\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-blue-900 bg-opacity-30 border border-blue-700 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-blue-300 mb-2\",children:\"How to get your Hyperliquid API credentials:\"}),/*#__PURE__*/_jsxs(\"ol\",{className:\"text-sm text-blue-200 space-y-1 list-decimal list-inside\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Go to \",/*#__PURE__*/_jsx(\"a\",{href:\"https://app.hyperliquid.xyz/API\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"underline\",children:\"Hyperliquid API Management\"})]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Copy your \",/*#__PURE__*/_jsx(\"strong\",{children:\"main wallet address\"}),\" from the top-right dropdown\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"Enter a descriptive name for your API wallet\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Click \\\"Generate\\\" to create the API wallet\"}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Copy the \",/*#__PURE__*/_jsx(\"strong\",{children:\"API Key\"}),\" (public identifier)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Click \\\"Authorize API Wallet\\\" to reveal the \",/*#__PURE__*/_jsx(\"strong\",{children:\"API Secret Key\"})]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Copy the \",/*#__PURE__*/_jsx(\"strong\",{children:\"API Secret Key\"}),\" (private secret)\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"Paste all three values into the fields above\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-green-900 bg-opacity-30 border border-green-700 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-green-300 mb-2\",children:\"Security Features:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"text-sm text-green-200 space-y-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Private keys are encrypted in storage\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 All API calls use secure HTTPS\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 No keys are logged or transmitted unnecessarily\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Testnet environment for safe testing\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-yellow-900 bg-opacity-30 border border-yellow-700 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-yellow-300 mb-2\",children:\"Important Notes:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"text-sm text-yellow-200 space-y-1\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Main Wallet Address:\"}),\" Your master account address from Hyperliquid\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"API Key:\"}),\" The public identifier for your API wallet\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"strong\",{children:\"API Secret Key:\"}),\" The private secret for your API wallet (keep secure!)\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Choose mainnet for live trading or testnet for paper trading\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Never share your API secret key with anyone\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Monitor your account regularly for security\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-red-900 bg-opacity-30 border border-red-700 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-red-300 mb-2\",children:\"Fallback Mode:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-red-200\",children:\"If no API credentials are provided, the application will run in demo mode with mock data. This allows you to explore the interface without real trading capabilities.\"})]})]})]})]})]});};export default Settings;","map":{"version":3,"names":["React","useState","useEffect","axios","Settings","SettingsIcon","Key","Shield","AlertCircle","CheckCircle","Eye","EyeOff","LoadingSpinner","jsx","_jsx","jsxs","_jsxs","settings","setSettings","apiStatus","setApiStatus","loading","setLoading","saving","setSaving","testing","setTesting","message","setMessage","showPrivateKey","setShowPrivateKey","formData","setFormData","wallet_address","api_key","api_secret","environment","fetchSettings","checkApiStatus","response","get","data","success","_response$data$data$a","_response$data$data$a2","_response$data$data$a3","_response$data$data$a4","api_credentials","error","console","type","text","handleSaveSettings","e","preventDefault","updatedSettings","_objectSpread","is_configured","Boolean","put","setTimeout","_error$response","_error$response$data","detail","handleTestConnection","_settings$api_credent","_settings$api_credent2","_settings$api_credent3","_settings$api_credent4","Promise","resolve","_response$data$data$t","test_result","includes","getStatusIcon","_apiStatus$test_resul","_apiStatus$test_resul2","className","getStatusText","_apiStatus$test_resul3","_apiStatus$test_resul4","getStatusColor","_apiStatus$test_resul5","_apiStatus$test_resul6","children","size","concat","onClick","onSubmit","value","onChange","prev","target","placeholder","disabled","href","rel"],"sources":["/app/frontend/src/components/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Settings as SettingsIcon, Key, Shield, AlertCircle, CheckCircle, Eye, EyeOff } from 'lucide-react';\nimport LoadingSpinner from './LoadingSpinner';\n\nconst Settings = () => {\n  const [settings, setSettings] = useState(null);\n  const [apiStatus, setApiStatus] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [testing, setTesting] = useState(false);\n  const [message, setMessage] = useState(null);\n  const [showPrivateKey, setShowPrivateKey] = useState(false);\n  \n  const [formData, setFormData] = useState({\n    wallet_address: '',\n    api_key: '',\n    api_secret: '',\n    environment: 'mainnet'\n  });\n\n  useEffect(() => {\n    fetchSettings();\n    checkApiStatus();\n  }, []);\n\n  const fetchSettings = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/settings');\n      if (response.data.success) {\n        setSettings(response.data.data);\n        setFormData({\n          wallet_address: response.data.data.api_credentials?.wallet_address || '',\n          api_key: response.data.data.api_credentials?.api_key || '',\n          api_secret: response.data.data.api_credentials?.api_secret || '',\n          environment: response.data.data.api_credentials?.environment || 'mainnet'\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching settings:', error);\n      setMessage({ type: 'error', text: 'Failed to fetch settings' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const checkApiStatus = async () => {\n    try {\n      const response = await axios.get('/api/settings/api-status');\n      if (response.data.success) {\n        setApiStatus(response.data.data);\n      }\n    } catch (error) {\n      console.error('Error checking API status:', error);\n    }\n  };\n\n  const handleSaveSettings = async (e) => {\n    e.preventDefault();\n    \n    try {\n      setSaving(true);\n      setMessage(null);\n\n      const updatedSettings = {\n        ...settings,\n        api_credentials: {\n          wallet_address: formData.wallet_address,\n          api_key: formData.api_key,\n          api_secret: formData.api_secret,\n          environment: formData.environment,\n          is_configured: Boolean(formData.wallet_address && formData.api_key && formData.api_secret)\n        }\n      };\n\n      const response = await axios.put('/api/settings', updatedSettings);\n      \n      if (response.data.success) {\n        setMessage({ type: 'success', text: 'Settings saved successfully!' });\n        setSettings(response.data.data);\n        \n        // Automatically refresh API status after saving\n        setTimeout(() => {\n          checkApiStatus();\n        }, 1000);\n      } else {\n        setMessage({ type: 'error', text: response.data.message || 'Failed to save settings' });\n      }\n\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      setMessage({ \n        type: 'error', \n        text: error.response?.data?.detail || 'Failed to save settings' \n      });\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleTestConnection = async () => {\n    try {\n      setTesting(true);\n      setMessage(null);\n\n      // First save the settings if they've changed\n      if (formData.wallet_address !== settings?.api_credentials?.wallet_address ||\n          formData.api_key !== settings?.api_credentials?.api_key ||\n          formData.api_secret !== settings?.api_credentials?.api_secret ||\n          formData.environment !== settings?.api_credentials?.environment) {\n        await handleSaveSettings({ preventDefault: () => {} });\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Wait for settings to be applied\n      }\n\n      const response = await axios.get('/api/settings/api-status');\n      \n      if (response.data.success) {\n        setApiStatus(response.data.data);\n        \n        if (response.data.data.is_configured && response.data.data.test_result?.includes('successfully')) {\n          setMessage({ type: 'success', text: 'API connection test successful!' });\n        } else {\n          setMessage({ \n            type: 'error', \n            text: response.data.data.test_result || 'API connection test failed' \n          });\n        }\n      }\n\n    } catch (error) {\n      console.error('Error testing connection:', error);\n      setMessage({ type: 'error', text: 'Failed to test API connection' });\n    } finally {\n      setTesting(false);\n    }\n  };\n\n  const getStatusIcon = () => {\n    if (!apiStatus) return null;\n    \n    if (apiStatus.is_configured && apiStatus.test_result?.includes('✅')) {\n      return <CheckCircle className=\"w-5 h-5 text-green-400\" />;\n    } else if (apiStatus.is_configured && apiStatus.test_result?.includes('❌')) {\n      return <AlertCircle className=\"w-5 h-5 text-red-400\" />;\n    } else {\n      return <AlertCircle className=\"w-5 h-5 text-yellow-400\" />;\n    }\n  };\n\n  const getStatusText = () => {\n    if (!apiStatus) return 'Checking...';\n    \n    if (apiStatus.is_configured && apiStatus.test_result?.includes('✅')) {\n      return 'Connected and ready for trading';\n    } else if (apiStatus.is_configured && apiStatus.test_result?.includes('❌')) {\n      return 'Configured but connection failed';\n    } else if (apiStatus.is_configured) {\n      return 'Configured - checking connection...';\n    } else {\n      return 'Not configured';\n    }\n  };\n\n  const getStatusColor = () => {\n    if (!apiStatus) return 'text-gray-400';\n    \n    if (apiStatus.is_configured && apiStatus.test_result?.includes('✅')) {\n      return 'text-green-400';\n    } else if (apiStatus.is_configured && apiStatus.test_result?.includes('❌')) {\n      return 'text-red-400';\n    } else if (apiStatus.is_configured) {\n      return 'text-yellow-400';\n    } else {\n      return 'text-yellow-400';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-6 flex items-center justify-center h-64\">\n        <LoadingSpinner size=\"large\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center space-x-3\">\n        <SettingsIcon className=\"w-8 h-8 text-blue-400\" />\n        <h1 className=\"text-3xl font-bold text-white\">Settings</h1>\n      </div>\n\n      {/* Message Display */}\n      {message && (\n        <div className={`p-4 rounded-lg flex items-center space-x-2 ${\n          message.type === 'success' \n            ? 'bg-green-900 text-green-300 border border-green-700' \n            : 'bg-red-900 text-red-300 border border-red-700'\n        }`}>\n          <AlertCircle size={20} />\n          <span>{message.text}</span>\n          <button \n            onClick={() => setMessage(null)}\n            className=\"ml-auto text-current hover:opacity-70\"\n          >\n            ×\n          </button>\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* API Configuration */}\n        <div className=\"bg-gray-800 p-6 rounded-lg border border-gray-700\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <Key className=\"w-6 h-6 text-blue-400\" />\n            <h2 className=\"text-xl font-bold text-white\">API Configuration</h2>\n          </div>\n\n          {/* API Status */}\n          <div className=\"mb-6 p-4 bg-gray-700 rounded-lg\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-gray-400\">Connection Status:</span>\n              <div className=\"flex items-center space-x-2\">\n                {getStatusIcon()}\n                <span className={`font-medium ${getStatusColor()}`}>\n                  {getStatusText()}\n                </span>\n              </div>\n            </div>\n            \n            {apiStatus && (\n              <div className=\"space-y-1 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">Environment:</span>\n                  <span className=\"text-white capitalize\">{apiStatus.environment}</span>\n                </div>\n                {apiStatus.test_result && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-400\">Test Result:</span>\n                    <span className={`${apiStatus.test_result.includes('successfully') ? 'text-green-400' : 'text-red-400'}`}>\n                      {apiStatus.test_result}\n                    </span>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n\n          <form onSubmit={handleSaveSettings} className=\"space-y-4\">\n            {/* Environment Selection */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-400 mb-2\">\n                Environment\n              </label>\n              <select\n                value={formData.environment}\n                onChange={(e) => setFormData(prev => ({ ...prev, environment: e.target.value }))}\n                className=\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\"\n              >\n                <option value=\"mainnet\">Mainnet (Live Trading)</option>\n                <option value=\"testnet\">Testnet (Paper Trading)</option>\n              </select>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                {formData.environment === 'testnet' \n                  ? 'Use testnet for safe testing with fake funds'\n                  : 'Use mainnet for live trading with real funds'\n                }\n              </p>\n            </div>\n\n            {/* Main Wallet Address */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-400 mb-2\">\n                Main Wallet Address\n              </label>\n              <input\n                type=\"text\"\n                value={formData.wallet_address}\n                onChange={(e) => setFormData(prev => ({ ...prev, wallet_address: e.target.value }))}\n                className=\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\"\n                placeholder=\"0x1234567890abcdef1234567890abcdef12345678\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Your main wallet address from Hyperliquid (master account address).\n              </p>\n            </div>\n\n            {/* API Key */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-400 mb-2\">\n                Hyperliquid API Key\n              </label>\n              <input\n                type=\"text\"\n                value={formData.api_key}\n                onChange={(e) => setFormData(prev => ({ ...prev, api_key: e.target.value }))}\n                className=\"w-full bg-gray-700 text-white px-3 py-2 rounded border border-gray-600 focus:outline-none focus:border-blue-400\"\n                placeholder=\"Enter your Hyperliquid API key\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">\n                The API key identifier from your Hyperliquid API wallet.\n              </p>\n            </div>\n\n            {/* API Secret Key */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-400 mb-2\">\n                Hyperliquid API Secret Key\n              </label>\n              <div className=\"relative\">\n                <input\n                  type={showPrivateKey ? 'text' : 'password'}\n                  value={formData.api_secret}\n                  onChange={(e) => setFormData(prev => ({ ...prev, api_secret: e.target.value }))}\n                  className=\"w-full bg-gray-700 text-white px-3 py-2 pr-10 rounded border border-gray-600 focus:outline-none focus:border-blue-400\"\n                  placeholder=\"Enter your Hyperliquid API secret key\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPrivateKey(!showPrivateKey)}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-white\"\n                >\n                  {showPrivateKey ? <EyeOff size={16} /> : <Eye size={16} />}\n                </button>\n              </div>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                The API secret key from your generated Hyperliquid API wallet.\n              </p>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex space-x-3 pt-4\">\n              <button\n                type=\"submit\"\n                disabled={saving}\n                className=\"flex-1 py-2 px-4 bg-blue-600 hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed rounded text-white transition-colors\"\n              >\n                {saving ? <LoadingSpinner size=\"small\" /> : 'Save Settings'}\n              </button>\n              \n              <button\n                type=\"button\"\n                onClick={handleTestConnection}\n                disabled={testing || !formData.wallet_address || !formData.api_key || !formData.api_secret}\n                className=\"py-2 px-4 bg-green-600 hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed rounded text-white transition-colors\"\n              >\n                {testing ? <LoadingSpinner size=\"small\" /> : 'Test Connection'}\n              </button>\n            </div>\n          </form>\n        </div>\n\n        {/* Security Information */}\n        <div className=\"bg-gray-800 p-6 rounded-lg border border-gray-700\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <Shield className=\"w-6 h-6 text-green-400\" />\n            <h2 className=\"text-xl font-bold text-white\">Security Information</h2>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div className=\"p-4 bg-blue-900 bg-opacity-30 border border-blue-700 rounded-lg\">\n              <h3 className=\"font-semibold text-blue-300 mb-2\">How to get your Hyperliquid API credentials:</h3>\n              <ol className=\"text-sm text-blue-200 space-y-1 list-decimal list-inside\">\n                <li>Go to <a href=\"https://app.hyperliquid.xyz/API\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"underline\">Hyperliquid API Management</a></li>\n                <li>Copy your <strong>main wallet address</strong> from the top-right dropdown</li>\n                <li>Enter a descriptive name for your API wallet</li>\n                <li>Click \"Generate\" to create the API wallet</li>\n                <li>Copy the <strong>API Key</strong> (public identifier)</li>\n                <li>Click \"Authorize API Wallet\" to reveal the <strong>API Secret Key</strong></li>\n                <li>Copy the <strong>API Secret Key</strong> (private secret)</li>\n                <li>Paste all three values into the fields above</li>\n              </ol>\n            </div>\n\n            <div className=\"p-4 bg-green-900 bg-opacity-30 border border-green-700 rounded-lg\">\n              <h3 className=\"font-semibold text-green-300 mb-2\">Security Features:</h3>\n              <ul className=\"text-sm text-green-200 space-y-1\">\n                <li>• Private keys are encrypted in storage</li>\n                <li>• All API calls use secure HTTPS</li>\n                <li>• No keys are logged or transmitted unnecessarily</li>\n                <li>• Testnet environment for safe testing</li>\n              </ul>\n            </div>\n\n            <div className=\"p-4 bg-yellow-900 bg-opacity-30 border border-yellow-700 rounded-lg\">\n              <h3 className=\"font-semibold text-yellow-300 mb-2\">Important Notes:</h3>\n              <ul className=\"text-sm text-yellow-200 space-y-1\">\n                <li>• <strong>Main Wallet Address:</strong> Your master account address from Hyperliquid</li>\n                <li>• <strong>API Key:</strong> The public identifier for your API wallet</li>\n                <li>• <strong>API Secret Key:</strong> The private secret for your API wallet (keep secure!)</li>\n                <li>• Choose mainnet for live trading or testnet for paper trading</li>\n                <li>• Never share your API secret key with anyone</li>\n                <li>• Monitor your account regularly for security</li>\n              </ul>\n            </div>\n\n            <div className=\"p-4 bg-red-900 bg-opacity-30 border border-red-700 rounded-lg\">\n              <h3 className=\"font-semibold text-red-300 mb-2\">Fallback Mode:</h3>\n              <p className=\"text-sm text-red-200\">\n                If no API credentials are provided, the application will run in demo mode with mock data. \n                This allows you to explore the interface without real trading capabilities.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;"],"mappings":"kGAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,GAAI,CAAAC,YAAY,CAAEC,GAAG,CAAEC,MAAM,CAAEC,WAAW,CAAEC,WAAW,CAAEC,GAAG,CAAEC,MAAM,KAAQ,cAAc,CAC3G,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9C,KAAM,CAAAZ,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACa,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACkB,SAAS,CAAEC,YAAY,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACoB,OAAO,CAAEC,UAAU,CAAC,CAAGrB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACsB,MAAM,CAAEC,SAAS,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAACwB,OAAO,CAAEC,UAAU,CAAC,CAAGzB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAC0B,OAAO,CAAEC,UAAU,CAAC,CAAG3B,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC4B,cAAc,CAAEC,iBAAiB,CAAC,CAAG7B,QAAQ,CAAC,KAAK,CAAC,CAE3D,KAAM,CAAC8B,QAAQ,CAAEC,WAAW,CAAC,CAAG/B,QAAQ,CAAC,CACvCgC,cAAc,CAAE,EAAE,CAClBC,OAAO,CAAE,EAAE,CACXC,UAAU,CAAE,EAAE,CACdC,WAAW,CAAE,SACf,CAAC,CAAC,CAEFlC,SAAS,CAAC,IAAM,CACdmC,aAAa,CAAC,CAAC,CACfC,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAD,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACFf,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAiB,QAAQ,CAAG,KAAM,CAAApC,KAAK,CAACqC,GAAG,CAAC,eAAe,CAAC,CACjD,GAAID,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAE,KAAAC,qBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CACzB5B,WAAW,CAACqB,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAC/BT,WAAW,CAAC,CACVC,cAAc,CAAE,EAAAU,qBAAA,CAAAJ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACM,eAAe,UAAAJ,qBAAA,iBAAlCA,qBAAA,CAAoCV,cAAc,GAAI,EAAE,CACxEC,OAAO,CAAE,EAAAU,sBAAA,CAAAL,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACM,eAAe,UAAAH,sBAAA,iBAAlCA,sBAAA,CAAoCV,OAAO,GAAI,EAAE,CAC1DC,UAAU,CAAE,EAAAU,sBAAA,CAAAN,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACM,eAAe,UAAAF,sBAAA,iBAAlCA,sBAAA,CAAoCV,UAAU,GAAI,EAAE,CAChEC,WAAW,CAAE,EAAAU,sBAAA,CAAAP,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACM,eAAe,UAAAD,sBAAA,iBAAlCA,sBAAA,CAAoCV,WAAW,GAAI,SAClE,CAAC,CAAC,CACJ,CACF,CAAE,MAAOY,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChDpB,UAAU,CAAC,CAAEsB,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAE,0BAA2B,CAAC,CAAC,CACjE,CAAC,OAAS,CACR7B,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAgB,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAApC,KAAK,CAACqC,GAAG,CAAC,0BAA0B,CAAC,CAC5D,GAAID,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAE,CACzBtB,YAAY,CAACmB,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAClC,CACF,CAAE,MAAOO,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CACpD,CACF,CAAC,CAED,KAAM,CAAAI,kBAAkB,CAAG,KAAO,CAAAC,CAAC,EAAK,CACtCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB,GAAI,CACF9B,SAAS,CAAC,IAAI,CAAC,CACfI,UAAU,CAAC,IAAI,CAAC,CAEhB,KAAM,CAAA2B,eAAe,CAAAC,aAAA,CAAAA,aAAA,IAChBvC,QAAQ,MACX8B,eAAe,CAAE,CACfd,cAAc,CAAEF,QAAQ,CAACE,cAAc,CACvCC,OAAO,CAAEH,QAAQ,CAACG,OAAO,CACzBC,UAAU,CAAEJ,QAAQ,CAACI,UAAU,CAC/BC,WAAW,CAAEL,QAAQ,CAACK,WAAW,CACjCqB,aAAa,CAAEC,OAAO,CAAC3B,QAAQ,CAACE,cAAc,EAAIF,QAAQ,CAACG,OAAO,EAAIH,QAAQ,CAACI,UAAU,CAC3F,CAAC,EACF,CAED,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAApC,KAAK,CAACwD,GAAG,CAAC,eAAe,CAAEJ,eAAe,CAAC,CAElE,GAAIhB,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAE,CACzBd,UAAU,CAAC,CAAEsB,IAAI,CAAE,SAAS,CAAEC,IAAI,CAAE,8BAA+B,CAAC,CAAC,CACrEjC,WAAW,CAACqB,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAE/B;AACAmB,UAAU,CAAC,IAAM,CACftB,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,IAAM,CACLV,UAAU,CAAC,CAAEsB,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAEZ,QAAQ,CAACE,IAAI,CAACd,OAAO,EAAI,yBAA0B,CAAC,CAAC,CACzF,CAEF,CAAE,MAAOqB,KAAK,CAAE,KAAAa,eAAA,CAAAC,oBAAA,CACdb,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9CpB,UAAU,CAAC,CACTsB,IAAI,CAAE,OAAO,CACbC,IAAI,CAAE,EAAAU,eAAA,CAAAb,KAAK,CAACT,QAAQ,UAAAsB,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBpB,IAAI,UAAAqB,oBAAA,iBAApBA,oBAAA,CAAsBC,MAAM,GAAI,yBACxC,CAAC,CAAC,CACJ,CAAC,OAAS,CACRvC,SAAS,CAAC,KAAK,CAAC,CAClB,CACF,CAAC,CAED,KAAM,CAAAwC,oBAAoB,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,KAAAC,qBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CACF1C,UAAU,CAAC,IAAI,CAAC,CAChBE,UAAU,CAAC,IAAI,CAAC,CAEhB;AACA,GAAIG,QAAQ,CAACE,cAAc,IAAKhB,QAAQ,SAARA,QAAQ,kBAAAgD,qBAAA,CAARhD,QAAQ,CAAE8B,eAAe,UAAAkB,qBAAA,iBAAzBA,qBAAA,CAA2BhC,cAAc,GACrEF,QAAQ,CAACG,OAAO,IAAKjB,QAAQ,SAARA,QAAQ,kBAAAiD,sBAAA,CAARjD,QAAQ,CAAE8B,eAAe,UAAAmB,sBAAA,iBAAzBA,sBAAA,CAA2BhC,OAAO,GACvDH,QAAQ,CAACI,UAAU,IAAKlB,QAAQ,SAARA,QAAQ,kBAAAkD,sBAAA,CAARlD,QAAQ,CAAE8B,eAAe,UAAAoB,sBAAA,iBAAzBA,sBAAA,CAA2BhC,UAAU,GAC7DJ,QAAQ,CAACK,WAAW,IAAKnB,QAAQ,SAARA,QAAQ,kBAAAmD,sBAAA,CAARnD,QAAQ,CAAE8B,eAAe,UAAAqB,sBAAA,iBAAzBA,sBAAA,CAA2BhC,WAAW,EAAE,CACnE,KAAM,CAAAgB,kBAAkB,CAAC,CAAEE,cAAc,CAAEA,CAAA,GAAM,CAAC,CAAE,CAAC,CAAC,CACtD,KAAM,IAAI,CAAAe,OAAO,CAACC,OAAO,EAAIV,UAAU,CAACU,OAAO,CAAE,IAAI,CAAC,CAAC,CAAE;AAC3D,CAEA,KAAM,CAAA/B,QAAQ,CAAG,KAAM,CAAApC,KAAK,CAACqC,GAAG,CAAC,0BAA0B,CAAC,CAE5D,GAAID,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAE,KAAA6B,qBAAA,CACzBnD,YAAY,CAACmB,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAEhC,GAAIF,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACgB,aAAa,GAAAc,qBAAA,CAAIhC,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC+B,WAAW,UAAAD,qBAAA,WAA9BA,qBAAA,CAAgCE,QAAQ,CAAC,cAAc,CAAC,CAAE,CAChG7C,UAAU,CAAC,CAAEsB,IAAI,CAAE,SAAS,CAAEC,IAAI,CAAE,iCAAkC,CAAC,CAAC,CAC1E,CAAC,IAAM,CACLvB,UAAU,CAAC,CACTsB,IAAI,CAAE,OAAO,CACbC,IAAI,CAAEZ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC+B,WAAW,EAAI,4BAC1C,CAAC,CAAC,CACJ,CACF,CAEF,CAAE,MAAOxB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjDpB,UAAU,CAAC,CAAEsB,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAE,+BAAgC,CAAC,CAAC,CACtE,CAAC,OAAS,CACRzB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAgD,aAAa,CAAGA,CAAA,GAAM,KAAAC,qBAAA,CAAAC,sBAAA,CAC1B,GAAI,CAACzD,SAAS,CAAE,MAAO,KAAI,CAE3B,GAAIA,SAAS,CAACsC,aAAa,GAAAkB,qBAAA,CAAIxD,SAAS,CAACqD,WAAW,UAAAG,qBAAA,WAArBA,qBAAA,CAAuBF,QAAQ,CAAC,GAAG,CAAC,CAAE,CACnE,mBAAO3D,IAAA,CAACL,WAAW,EAACoE,SAAS,CAAC,wBAAwB,CAAE,CAAC,CAC3D,CAAC,IAAM,IAAI1D,SAAS,CAACsC,aAAa,GAAAmB,sBAAA,CAAIzD,SAAS,CAACqD,WAAW,UAAAI,sBAAA,WAArBA,sBAAA,CAAuBH,QAAQ,CAAC,GAAG,CAAC,CAAE,CAC1E,mBAAO3D,IAAA,CAACN,WAAW,EAACqE,SAAS,CAAC,sBAAsB,CAAE,CAAC,CACzD,CAAC,IAAM,CACL,mBAAO/D,IAAA,CAACN,WAAW,EAACqE,SAAS,CAAC,yBAAyB,CAAE,CAAC,CAC5D,CACF,CAAC,CAED,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,KAAAC,sBAAA,CAAAC,sBAAA,CAC1B,GAAI,CAAC7D,SAAS,CAAE,MAAO,aAAa,CAEpC,GAAIA,SAAS,CAACsC,aAAa,GAAAsB,sBAAA,CAAI5D,SAAS,CAACqD,WAAW,UAAAO,sBAAA,WAArBA,sBAAA,CAAuBN,QAAQ,CAAC,GAAG,CAAC,CAAE,CACnE,MAAO,iCAAiC,CAC1C,CAAC,IAAM,IAAItD,SAAS,CAACsC,aAAa,GAAAuB,sBAAA,CAAI7D,SAAS,CAACqD,WAAW,UAAAQ,sBAAA,WAArBA,sBAAA,CAAuBP,QAAQ,CAAC,GAAG,CAAC,CAAE,CAC1E,MAAO,kCAAkC,CAC3C,CAAC,IAAM,IAAItD,SAAS,CAACsC,aAAa,CAAE,CAClC,MAAO,qCAAqC,CAC9C,CAAC,IAAM,CACL,MAAO,gBAAgB,CACzB,CACF,CAAC,CAED,KAAM,CAAAwB,cAAc,CAAGA,CAAA,GAAM,KAAAC,sBAAA,CAAAC,sBAAA,CAC3B,GAAI,CAAChE,SAAS,CAAE,MAAO,eAAe,CAEtC,GAAIA,SAAS,CAACsC,aAAa,GAAAyB,sBAAA,CAAI/D,SAAS,CAACqD,WAAW,UAAAU,sBAAA,WAArBA,sBAAA,CAAuBT,QAAQ,CAAC,GAAG,CAAC,CAAE,CACnE,MAAO,gBAAgB,CACzB,CAAC,IAAM,IAAItD,SAAS,CAACsC,aAAa,GAAA0B,sBAAA,CAAIhE,SAAS,CAACqD,WAAW,UAAAW,sBAAA,WAArBA,sBAAA,CAAuBV,QAAQ,CAAC,GAAG,CAAC,CAAE,CAC1E,MAAO,cAAc,CACvB,CAAC,IAAM,IAAItD,SAAS,CAACsC,aAAa,CAAE,CAClC,MAAO,iBAAiB,CAC1B,CAAC,IAAM,CACL,MAAO,iBAAiB,CAC1B,CACF,CAAC,CAED,GAAIpC,OAAO,CAAE,CACX,mBACEP,IAAA,QAAK+D,SAAS,CAAC,2CAA2C,CAAAO,QAAA,cACxDtE,IAAA,CAACF,cAAc,EAACyE,IAAI,CAAC,OAAO,CAAE,CAAC,CAC5B,CAAC,CAEV,CAEA,mBACErE,KAAA,QAAK6D,SAAS,CAAC,eAAe,CAAAO,QAAA,eAE5BpE,KAAA,QAAK6D,SAAS,CAAC,6BAA6B,CAAAO,QAAA,eAC1CtE,IAAA,CAACT,YAAY,EAACwE,SAAS,CAAC,uBAAuB,CAAE,CAAC,cAClD/D,IAAA,OAAI+D,SAAS,CAAC,+BAA+B,CAAAO,QAAA,CAAC,UAAQ,CAAI,CAAC,EACxD,CAAC,CAGLzD,OAAO,eACNX,KAAA,QAAK6D,SAAS,+CAAAS,MAAA,CACZ3D,OAAO,CAACuB,IAAI,GAAK,SAAS,CACtB,qDAAqD,CACrD,+CAA+C,CAClD,CAAAkC,QAAA,eACDtE,IAAA,CAACN,WAAW,EAAC6E,IAAI,CAAE,EAAG,CAAE,CAAC,cACzBvE,IAAA,SAAAsE,QAAA,CAAOzD,OAAO,CAACwB,IAAI,CAAO,CAAC,cAC3BrC,IAAA,WACEyE,OAAO,CAAEA,CAAA,GAAM3D,UAAU,CAAC,IAAI,CAAE,CAChCiD,SAAS,CAAC,uCAAuC,CAAAO,QAAA,CAClD,MAED,CAAQ,CAAC,EACN,CACN,cAEDpE,KAAA,QAAK6D,SAAS,CAAC,uCAAuC,CAAAO,QAAA,eAEpDpE,KAAA,QAAK6D,SAAS,CAAC,mDAAmD,CAAAO,QAAA,eAChEpE,KAAA,QAAK6D,SAAS,CAAC,kCAAkC,CAAAO,QAAA,eAC/CtE,IAAA,CAACR,GAAG,EAACuE,SAAS,CAAC,uBAAuB,CAAE,CAAC,cACzC/D,IAAA,OAAI+D,SAAS,CAAC,8BAA8B,CAAAO,QAAA,CAAC,mBAAiB,CAAI,CAAC,EAChE,CAAC,cAGNpE,KAAA,QAAK6D,SAAS,CAAC,iCAAiC,CAAAO,QAAA,eAC9CpE,KAAA,QAAK6D,SAAS,CAAC,wCAAwC,CAAAO,QAAA,eACrDtE,IAAA,SAAM+D,SAAS,CAAC,eAAe,CAAAO,QAAA,CAAC,oBAAkB,CAAM,CAAC,cACzDpE,KAAA,QAAK6D,SAAS,CAAC,6BAA6B,CAAAO,QAAA,EACzCV,aAAa,CAAC,CAAC,cAChB5D,IAAA,SAAM+D,SAAS,gBAAAS,MAAA,CAAiBL,cAAc,CAAC,CAAC,CAAG,CAAAG,QAAA,CAChDN,aAAa,CAAC,CAAC,CACZ,CAAC,EACJ,CAAC,EACH,CAAC,CAEL3D,SAAS,eACRH,KAAA,QAAK6D,SAAS,CAAC,mBAAmB,CAAAO,QAAA,eAChCpE,KAAA,QAAK6D,SAAS,CAAC,sBAAsB,CAAAO,QAAA,eACnCtE,IAAA,SAAM+D,SAAS,CAAC,eAAe,CAAAO,QAAA,CAAC,cAAY,CAAM,CAAC,cACnDtE,IAAA,SAAM+D,SAAS,CAAC,uBAAuB,CAAAO,QAAA,CAAEjE,SAAS,CAACiB,WAAW,CAAO,CAAC,EACnE,CAAC,CACLjB,SAAS,CAACqD,WAAW,eACpBxD,KAAA,QAAK6D,SAAS,CAAC,sBAAsB,CAAAO,QAAA,eACnCtE,IAAA,SAAM+D,SAAS,CAAC,eAAe,CAAAO,QAAA,CAAC,cAAY,CAAM,CAAC,cACnDtE,IAAA,SAAM+D,SAAS,IAAAS,MAAA,CAAKnE,SAAS,CAACqD,WAAW,CAACC,QAAQ,CAAC,cAAc,CAAC,CAAG,gBAAgB,CAAG,cAAc,CAAG,CAAAW,QAAA,CACtGjE,SAAS,CAACqD,WAAW,CAClB,CAAC,EACJ,CACN,EACE,CACN,EACE,CAAC,cAENxD,KAAA,SAAMwE,QAAQ,CAAEpC,kBAAmB,CAACyB,SAAS,CAAC,WAAW,CAAAO,QAAA,eAEvDpE,KAAA,QAAAoE,QAAA,eACEtE,IAAA,UAAO+D,SAAS,CAAC,8CAA8C,CAAAO,QAAA,CAAC,aAEhE,CAAO,CAAC,cACRpE,KAAA,WACEyE,KAAK,CAAE1D,QAAQ,CAACK,WAAY,CAC5BsD,QAAQ,CAAGrC,CAAC,EAAKrB,WAAW,CAAC2D,IAAI,EAAAnC,aAAA,CAAAA,aAAA,IAAUmC,IAAI,MAAEvD,WAAW,CAAEiB,CAAC,CAACuC,MAAM,CAACH,KAAK,EAAG,CAAE,CACjFZ,SAAS,CAAC,iHAAiH,CAAAO,QAAA,eAE3HtE,IAAA,WAAQ2E,KAAK,CAAC,SAAS,CAAAL,QAAA,CAAC,wBAAsB,CAAQ,CAAC,cACvDtE,IAAA,WAAQ2E,KAAK,CAAC,SAAS,CAAAL,QAAA,CAAC,yBAAuB,CAAQ,CAAC,EAClD,CAAC,cACTtE,IAAA,MAAG+D,SAAS,CAAC,4BAA4B,CAAAO,QAAA,CACtCrD,QAAQ,CAACK,WAAW,GAAK,SAAS,CAC/B,8CAA8C,CAC9C,8CAA8C,CAEjD,CAAC,EACD,CAAC,cAGNpB,KAAA,QAAAoE,QAAA,eACEtE,IAAA,UAAO+D,SAAS,CAAC,8CAA8C,CAAAO,QAAA,CAAC,qBAEhE,CAAO,CAAC,cACRtE,IAAA,UACEoC,IAAI,CAAC,MAAM,CACXuC,KAAK,CAAE1D,QAAQ,CAACE,cAAe,CAC/ByD,QAAQ,CAAGrC,CAAC,EAAKrB,WAAW,CAAC2D,IAAI,EAAAnC,aAAA,CAAAA,aAAA,IAAUmC,IAAI,MAAE1D,cAAc,CAAEoB,CAAC,CAACuC,MAAM,CAACH,KAAK,EAAG,CAAE,CACpFZ,SAAS,CAAC,iHAAiH,CAC3HgB,WAAW,CAAC,4CAA4C,CACzD,CAAC,cACF/E,IAAA,MAAG+D,SAAS,CAAC,4BAA4B,CAAAO,QAAA,CAAC,qEAE1C,CAAG,CAAC,EACD,CAAC,cAGNpE,KAAA,QAAAoE,QAAA,eACEtE,IAAA,UAAO+D,SAAS,CAAC,8CAA8C,CAAAO,QAAA,CAAC,qBAEhE,CAAO,CAAC,cACRtE,IAAA,UACEoC,IAAI,CAAC,MAAM,CACXuC,KAAK,CAAE1D,QAAQ,CAACG,OAAQ,CACxBwD,QAAQ,CAAGrC,CAAC,EAAKrB,WAAW,CAAC2D,IAAI,EAAAnC,aAAA,CAAAA,aAAA,IAAUmC,IAAI,MAAEzD,OAAO,CAAEmB,CAAC,CAACuC,MAAM,CAACH,KAAK,EAAG,CAAE,CAC7EZ,SAAS,CAAC,iHAAiH,CAC3HgB,WAAW,CAAC,gCAAgC,CAC7C,CAAC,cACF/E,IAAA,MAAG+D,SAAS,CAAC,4BAA4B,CAAAO,QAAA,CAAC,0DAE1C,CAAG,CAAC,EACD,CAAC,cAGNpE,KAAA,QAAAoE,QAAA,eACEtE,IAAA,UAAO+D,SAAS,CAAC,8CAA8C,CAAAO,QAAA,CAAC,4BAEhE,CAAO,CAAC,cACRpE,KAAA,QAAK6D,SAAS,CAAC,UAAU,CAAAO,QAAA,eACvBtE,IAAA,UACEoC,IAAI,CAAErB,cAAc,CAAG,MAAM,CAAG,UAAW,CAC3C4D,KAAK,CAAE1D,QAAQ,CAACI,UAAW,CAC3BuD,QAAQ,CAAGrC,CAAC,EAAKrB,WAAW,CAAC2D,IAAI,EAAAnC,aAAA,CAAAA,aAAA,IAAUmC,IAAI,MAAExD,UAAU,CAAEkB,CAAC,CAACuC,MAAM,CAACH,KAAK,EAAG,CAAE,CAChFZ,SAAS,CAAC,uHAAuH,CACjIgB,WAAW,CAAC,uCAAuC,CACpD,CAAC,cACF/E,IAAA,WACEoC,IAAI,CAAC,QAAQ,CACbqC,OAAO,CAAEA,CAAA,GAAMzD,iBAAiB,CAAC,CAACD,cAAc,CAAE,CAClDgD,SAAS,CAAC,oFAAoF,CAAAO,QAAA,CAE7FvD,cAAc,cAAGf,IAAA,CAACH,MAAM,EAAC0E,IAAI,CAAE,EAAG,CAAE,CAAC,cAAGvE,IAAA,CAACJ,GAAG,EAAC2E,IAAI,CAAE,EAAG,CAAE,CAAC,CACpD,CAAC,EACN,CAAC,cACNvE,IAAA,MAAG+D,SAAS,CAAC,4BAA4B,CAAAO,QAAA,CAAC,gEAE1C,CAAG,CAAC,EACD,CAAC,cAGNpE,KAAA,QAAK6D,SAAS,CAAC,qBAAqB,CAAAO,QAAA,eAClCtE,IAAA,WACEoC,IAAI,CAAC,QAAQ,CACb4C,QAAQ,CAAEvE,MAAO,CACjBsD,SAAS,CAAC,qIAAqI,CAAAO,QAAA,CAE9I7D,MAAM,cAAGT,IAAA,CAACF,cAAc,EAACyE,IAAI,CAAC,OAAO,CAAE,CAAC,CAAG,eAAe,CACrD,CAAC,cAETvE,IAAA,WACEoC,IAAI,CAAC,QAAQ,CACbqC,OAAO,CAAEvB,oBAAqB,CAC9B8B,QAAQ,CAAErE,OAAO,EAAI,CAACM,QAAQ,CAACE,cAAc,EAAI,CAACF,QAAQ,CAACG,OAAO,EAAI,CAACH,QAAQ,CAACI,UAAW,CAC3F0C,SAAS,CAAC,gIAAgI,CAAAO,QAAA,CAEzI3D,OAAO,cAAGX,IAAA,CAACF,cAAc,EAACyE,IAAI,CAAC,OAAO,CAAE,CAAC,CAAG,iBAAiB,CACxD,CAAC,EACN,CAAC,EACF,CAAC,EACJ,CAAC,cAGNrE,KAAA,QAAK6D,SAAS,CAAC,mDAAmD,CAAAO,QAAA,eAChEpE,KAAA,QAAK6D,SAAS,CAAC,kCAAkC,CAAAO,QAAA,eAC/CtE,IAAA,CAACP,MAAM,EAACsE,SAAS,CAAC,wBAAwB,CAAE,CAAC,cAC7C/D,IAAA,OAAI+D,SAAS,CAAC,8BAA8B,CAAAO,QAAA,CAAC,sBAAoB,CAAI,CAAC,EACnE,CAAC,cAENpE,KAAA,QAAK6D,SAAS,CAAC,WAAW,CAAAO,QAAA,eACxBpE,KAAA,QAAK6D,SAAS,CAAC,iEAAiE,CAAAO,QAAA,eAC9EtE,IAAA,OAAI+D,SAAS,CAAC,kCAAkC,CAAAO,QAAA,CAAC,8CAA4C,CAAI,CAAC,cAClGpE,KAAA,OAAI6D,SAAS,CAAC,0DAA0D,CAAAO,QAAA,eACtEpE,KAAA,OAAAoE,QAAA,EAAI,QAAM,cAAAtE,IAAA,MAAGiF,IAAI,CAAC,iCAAiC,CAACH,MAAM,CAAC,QAAQ,CAACI,GAAG,CAAC,qBAAqB,CAACnB,SAAS,CAAC,WAAW,CAAAO,QAAA,CAAC,4BAA0B,CAAG,CAAC,EAAI,CAAC,cACvJpE,KAAA,OAAAoE,QAAA,EAAI,YAAU,cAAAtE,IAAA,WAAAsE,QAAA,CAAQ,qBAAmB,CAAQ,CAAC,+BAA4B,EAAI,CAAC,cACnFtE,IAAA,OAAAsE,QAAA,CAAI,8CAA4C,CAAI,CAAC,cACrDtE,IAAA,OAAAsE,QAAA,CAAI,6CAAyC,CAAI,CAAC,cAClDpE,KAAA,OAAAoE,QAAA,EAAI,WAAS,cAAAtE,IAAA,WAAAsE,QAAA,CAAQ,SAAO,CAAQ,CAAC,uBAAoB,EAAI,CAAC,cAC9DpE,KAAA,OAAAoE,QAAA,EAAI,+CAA2C,cAAAtE,IAAA,WAAAsE,QAAA,CAAQ,gBAAc,CAAQ,CAAC,EAAI,CAAC,cACnFpE,KAAA,OAAAoE,QAAA,EAAI,WAAS,cAAAtE,IAAA,WAAAsE,QAAA,CAAQ,gBAAc,CAAQ,CAAC,oBAAiB,EAAI,CAAC,cAClEtE,IAAA,OAAAsE,QAAA,CAAI,8CAA4C,CAAI,CAAC,EACnD,CAAC,EACF,CAAC,cAENpE,KAAA,QAAK6D,SAAS,CAAC,mEAAmE,CAAAO,QAAA,eAChFtE,IAAA,OAAI+D,SAAS,CAAC,mCAAmC,CAAAO,QAAA,CAAC,oBAAkB,CAAI,CAAC,cACzEpE,KAAA,OAAI6D,SAAS,CAAC,kCAAkC,CAAAO,QAAA,eAC9CtE,IAAA,OAAAsE,QAAA,CAAI,8CAAuC,CAAI,CAAC,cAChDtE,IAAA,OAAAsE,QAAA,CAAI,uCAAgC,CAAI,CAAC,cACzCtE,IAAA,OAAAsE,QAAA,CAAI,wDAAiD,CAAI,CAAC,cAC1DtE,IAAA,OAAAsE,QAAA,CAAI,6CAAsC,CAAI,CAAC,EAC7C,CAAC,EACF,CAAC,cAENpE,KAAA,QAAK6D,SAAS,CAAC,qEAAqE,CAAAO,QAAA,eAClFtE,IAAA,OAAI+D,SAAS,CAAC,oCAAoC,CAAAO,QAAA,CAAC,kBAAgB,CAAI,CAAC,cACxEpE,KAAA,OAAI6D,SAAS,CAAC,mCAAmC,CAAAO,QAAA,eAC/CpE,KAAA,OAAAoE,QAAA,EAAI,SAAE,cAAAtE,IAAA,WAAAsE,QAAA,CAAQ,sBAAoB,CAAQ,CAAC,gDAA6C,EAAI,CAAC,cAC7FpE,KAAA,OAAAoE,QAAA,EAAI,SAAE,cAAAtE,IAAA,WAAAsE,QAAA,CAAQ,UAAQ,CAAQ,CAAC,6CAA0C,EAAI,CAAC,cAC9EpE,KAAA,OAAAoE,QAAA,EAAI,SAAE,cAAAtE,IAAA,WAAAsE,QAAA,CAAQ,iBAAe,CAAQ,CAAC,yDAAsD,EAAI,CAAC,cACjGtE,IAAA,OAAAsE,QAAA,CAAI,qEAA8D,CAAI,CAAC,cACvEtE,IAAA,OAAAsE,QAAA,CAAI,oDAA6C,CAAI,CAAC,cACtDtE,IAAA,OAAAsE,QAAA,CAAI,oDAA6C,CAAI,CAAC,EACpD,CAAC,EACF,CAAC,cAENpE,KAAA,QAAK6D,SAAS,CAAC,+DAA+D,CAAAO,QAAA,eAC5EtE,IAAA,OAAI+D,SAAS,CAAC,iCAAiC,CAAAO,QAAA,CAAC,gBAAc,CAAI,CAAC,cACnEtE,IAAA,MAAG+D,SAAS,CAAC,sBAAsB,CAAAO,QAAA,CAAC,uKAGpC,CAAG,CAAC,EACD,CAAC,EACH,CAAC,EACH,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}